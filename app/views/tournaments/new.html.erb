<!DOCTYPE HTML>
<div class="container">
<h1>Tournament Registration</h1>
<%= bootstrap_form_for(@tournament, url: '/tournaments', multipart: true, layout: :horizontal, label_col: "col-sm-3", control_col: "col-sm-5")  do |f| %>
    <%= f.error_summary %>
    
    <h3>Tournament Information</h3>
    <%= f.text_field :name %>
    <%= f.file_field :logo %>
    <%= f.select :language, options_for_select(Tournament.language_options) %>
    <%= f.select :currency, options_for_select(Tournament.currency_options) %>
    <%= f.text_area :details %>
    <%= f.datetime_select :start_date,  {:start_year => Time.now().year, :ampm => true} %>
    <div class="alert alert-warning" id="is_private_warning" style="display: none">
      <strong>Warning!</strong> Private events can not be made public.
    </div>
      <%= f.check_box :is_private%>
      <br>
    <h3>Personal Contact Information</h3>
    <%= f.text_field :contact_name %>
    <%= f.text_field :contact_email %>
    <br>
    <h3>Venue Information</h3>
    <%= f.text_field :venue_name %>
    <%= f.file_field :venue_logo %>
    <%= f.text_field :venue_address, id:"autocomplete", onFocus: "geolocate()"%>
    <%= f.text_field :venue_website %>
    <%= f.text_field :venue_contact_details %>
    <br>
    <h3>Ticket Information</h3>
    <%= f.number_field :total_player_tickets%>
      <%= f.number_field :total_audience_tickets%>
      <%= f.number_field :total_dinner_tickets%>

      <%= f.number_field :player_price, :step=>:any%>
      <%= f.number_field :dinner_price, :step=>:any%>
      <%= f.number_field :spectator_price, :step=>:any%>
      <%= f.number_field :foursome_price, :step=>:any%>
      <h3>Sponsor Options</h3>


      <%= f.number_field :gold_sponsor_price,:step=>:any%>
      <%= f.text_area :gold_sponsor_desc%>
      <%= f.number_field :silver_sponsor_price, :step=>:any%>
      <%= f.text_area :silver_sponsor_desc%>
      <%= f.number_field :bronze_sponsor_price, :step=>:any%>
      <%= f.text_area :bronze_sponsor_desc %>

      <h3>Player Questionnaire (Optional)</h3>
      <%= f.check_box :player_questionnaire %>
      <%= f.text_field :questionnaire_name %>

    <br>



    <%= f.submit 'Continue', class: "btn-lg btn-success center-block"%>
    <br>
<% end %>
</div>

<script>
  var autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        {types: ['geocode']});

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }

  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }

  // Hide/Show warning from checking off private event field

  $("#tournament_is_private").click(function() {
    console.log('we in here?')
    if ($(this).is(":checked")) {
      console.log('show')
      $("#is_private_warning").show()
    } else {
      console.log('hide')
      $("#is_private_warning").hide()
    }
  })

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJsI21_UkxTLQaDzxH0pev5nBdpErs-0k&libraries=places&callback=initAutocomplete"
        async defer></script>
